@using GulfCoastWorkforceSolutions.Models.InlineEditors
@using GulfCoastWorkforceSolutions.Models.Widgets

@model GulfCoastWorkforceSolutions.Models.Widgets.NewsWidgetViewModel
<div class="newsRow row">
    @if (Model.NewsList.Count > 0)
    {

        foreach (var news in Model.NewsList)
        {
            <div class="newsColumn ">
                <div class="news_content">
                    <a href="#">
                        <div class="newsimg ">
                            <img src="@news.ImagePath" alt="News Article Image">
                        </div>
                        <div class="news_category">
                            Category
                        </div>
                        <div class="newsinfo">
                            <div class="newsBody">
                                <h3>
                                    <a href="@news.NewsUrl">@news.Title</a>
                                </h3>
                                <span class="date">Jun 01, 2024</span>
                                <p>
                                    @news.Summary
                                </p>
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        }
    }
</div>
@*@{
        string styleAttribute = null;
        if (!string.IsNullOrEmpty(Model.ImagePath))
        {
            styleAttribute = $"style=\"background-image: url('{Url.Content(Model.ImagePath)}');\"";
        }

        bool editMode = Context.Kentico().PageBuilder().EditMode;
        bool displayLink = !editMode && !String.IsNullOrEmpty(Model.LinkUrl);
    }*@

@*@helper RenderBanner(bool editMode, string styleAttribute)
    {
        <section class="banner-section" @Html.Raw(styleAttribute)>
            <h2 class="banner-heading">@ResHelper.GetString("GulfCoastWorkforceSolutionsMvc.Widget.Banner.Heading")</h2>
            <div class="banner-text">
                @if (editMode)
                {
                    Html.RenderPartial("InlineEditors/_TextEditor", new TextEditorViewModel
                    {
                        PropertyName = nameof(BannerWidgetProperties.Text),
                        Text = Model.Text,
                    });
                }
                else
                {
                    @Model.Text
                }
            </div>
        </section>
    }

    @if (editMode)
    {
        Html.RenderPartial("InlineEditors/_ImageUploaderEditor", new ImageUploaderEditorViewModel
        {
            ImageType = ImageTypeEnum.MediaFile,
            PropertyName = nameof(BannerWidgetProperties.Image),
            HasImage = Model.ImagePath != null,
            MessagePosition = PanelPositionEnum.Top,
            UseAbsolutePosition = true
        });
    }

    @if (displayLink)
    {
        <a title="@Model.LinkTitle" href="@Model.LinkUrl" class="banner-link">
            @RenderBanner(editMode, styleAttribute)
        </a>
    }
    else
    {
        @RenderBanner(editMode, styleAttribute);
    }*@
