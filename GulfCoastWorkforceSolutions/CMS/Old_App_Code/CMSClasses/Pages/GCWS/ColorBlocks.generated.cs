//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.GCWS;

[assembly: RegisterDocumentType(ColorBlocks.CLASS_NAME, typeof(ColorBlocks))]

namespace CMS.DocumentEngine.Types.GCWS
{
	/// <summary>
	/// Represents a content item of type ColorBlocks.
	/// </summary>
	public partial class ColorBlocks : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "GCWS.ColorBlocks";


		/// <summary>
		/// The instance of the class that provides extended API for working with ColorBlocks fields.
		/// </summary>
		private readonly ColorBlocksFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ColorBlocksID.
		/// </summary>
		[DatabaseIDField]
		public int ColorBlocksID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ColorBlocksID"), 0);
			}
			set
			{
				SetValue("ColorBlocksID", value);
			}
		}


		/// <summary>
		/// Title.
		/// </summary>
		[DatabaseField]
		public string Title
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Title"), @"");
			}
			set
			{
				SetValue("Title", value);
			}
		}


		/// <summary>
		/// Description.
		/// </summary>
		[DatabaseField]
		public string Description
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Description"), @"");
			}
			set
			{
				SetValue("Description", value);
			}
		}


		/// <summary>
		/// Background Color.
		/// </summary>
		[DatabaseField]
		public string Color
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Color"), @"");
			}
			set
			{
				SetValue("Color", value);
			}
		}


		/// <summary>
		/// Icon.
		/// </summary>
		[DatabaseField]
		public Guid Icon1
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("Icon"), Guid.Empty);
			}
			set
			{
				SetValue("Icon", value);
			}
		}


		/// <summary>
		/// CTALabel.
		/// </summary>
		[DatabaseField]
		public string CTALabel
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CTALabel"), @"");
			}
			set
			{
				SetValue("CTALabel", value);
			}
		}


		/// <summary>
		/// CTAUrl.
		/// </summary>
		[DatabaseField]
		public string CTAUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CTAUrl"), @"");
			}
			set
			{
				SetValue("CTAUrl", value);
			}
		}


		/// <summary>
		/// Banner Css Class.
		/// </summary>
		[DatabaseField]
		public string BannerCssClass
		{
			get
			{
				return ValidationHelper.GetString(GetValue("BannerCssClass"), @"");
			}
			set
			{
				SetValue("BannerCssClass", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with ColorBlocks fields.
		/// </summary>
		[RegisterProperty]
		public ColorBlocksFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with ColorBlocks fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ColorBlocksFields : AbstractHierarchicalObject<ColorBlocksFields>
		{
			/// <summary>
			/// The content item of type ColorBlocks that is a target of the extended API.
			/// </summary>
			private readonly ColorBlocks mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ColorBlocksFields" /> class with the specified content item of type ColorBlocks.
			/// </summary>
			/// <param name="instance">The content item of type ColorBlocks that is a target of the extended API.</param>
			public ColorBlocksFields(ColorBlocks instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ColorBlocksID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ColorBlocksID;
				}
				set
				{
					mInstance.ColorBlocksID = value;
				}
			}


			/// <summary>
			/// Title.
			/// </summary>
			public string Title
			{
				get
				{
					return mInstance.Title;
				}
				set
				{
					mInstance.Title = value;
				}
			}


			/// <summary>
			/// Description.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.Description;
				}
				set
				{
					mInstance.Description = value;
				}
			}


			/// <summary>
			/// Background Color.
			/// </summary>
			public string Color
			{
				get
				{
					return mInstance.Color;
				}
				set
				{
					mInstance.Color = value;
				}
			}


			/// <summary>
			/// Icon.
			/// </summary>
			public DocumentAttachment Icon
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("Icon");
				}
			}


			/// <summary>
			/// CTALabel.
			/// </summary>
			public string CTALabel
			{
				get
				{
					return mInstance.CTALabel;
				}
				set
				{
					mInstance.CTALabel = value;
				}
			}


			/// <summary>
			/// CTAUrl.
			/// </summary>
			public string CTAUrl
			{
				get
				{
					return mInstance.CTAUrl;
				}
				set
				{
					mInstance.CTAUrl = value;
				}
			}


			/// <summary>
			/// Banner Css Class.
			/// </summary>
			public string BannerCssClass
			{
				get
				{
					return mInstance.BannerCssClass;
				}
				set
				{
					mInstance.BannerCssClass = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="ColorBlocks" /> class.
		/// </summary>
		public ColorBlocks() : base(CLASS_NAME)
		{
			mFields = new ColorBlocksFields(this);
		}

		#endregion
	}
}